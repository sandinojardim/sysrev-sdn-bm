,Unnamed: 0,Item Title,Publication Title,Book Series Title,Journal Volume,Journal Issue,Item DOI,Authors,Publication Year,URL,Content Type,Abstract
99,99,Performance Evaluation of Multi Controller Software Defined Network Architecture on Mininet,Cyber-physical Systems and Digital Twins,,,,10.1007/978-3-030-23162-0_40,B. M. RashmaG. Poornima,2020,http://link.springer.com/chapter/10.1007/978-3-030-23162-0_40,Chapter,"The traditional network lacks flexibility when network needs to be scaled-up or scaled-down as it completely relies on hardware components like routers and switches. This can be solved by a paradigm technology SDN (Software Defined Networks). SDN facilitate network administrators to decouple control plane from data plane, and logically centralize control functions in a software controller. Proposed work in this paper is a rapid SDN prototyping of Single Controller (SC) and Multi Controller (MC) architecture on mininet, a programming flexible simulator. The emulation displays a Multi-Controller (MC) SDN architecture which improves efficiency and exhibits competence in handling scalable network on contrary to Single-Controller (SC) architecture. The proposed work demonstrates defining user defined controller on inbuilt Open Flow controller which also brings intra-cluster and inter-cluster communication in a hierarchical network. We empirically ratify the scalability of network by increasing number of host nodes.KeywordsMininetMulti controllerOpenFlowEthernetRound Trip Time (RTT)"
646,646,Performance Analysis of Software Defined Network with Three Controllers,Proceedings of the Future Technologies Conference (FTC) 2018,,,,10.1007/978-3-030-02683-7_51,Shishupal KumarNidhi LalVijay Kumar Chaurasiya,2019,http://link.springer.com/chapter/10.1007/978-3-030-02683-7_51,Chapter,"Software-defined network is one of the best methodologies of computer network that countenances to an administrator to succeed the computer network amenities through the perception of subordinate side by side functionality. Software-defined network (SDN) is alienated into two fragments: one is Control plane and former is Data plane. In control plane are the actually deployed devices. This control plane is located at a fundamental controller. The controller is responsible for building the forwarding base and figuring out how a packet should be forwarded through a network. The SDN controller takes the information of packages and places it in a forwarding table or flow table of devices, the controller verifies the protocol made by the administrator and forward the packet to the router. In this paper, the performance analysis of SDN is done with the help of one, two and three controllers and will see how much the transfer time is affected with increasing number of controllers.KeywordsSoftware-Defined NetworkWireless networkOpenFlowNoxPoxTrema"
980,980,Performance Evaluation of Openflow SDN Controllers,Intelligent Systems Design and Applications,,,,10.1007/978-3-319-76348-4_87,Sangeeta Mittal,2018,http://link.springer.com/chapter/10.1007/978-3-319-76348-4_87,Chapter,"
Software Defined Networks (SDN) is the recent networking paradigm being adopted by stakeholders in big way. The concept works towards dramatically reducing network deployment and management costs. Controllers, also known as Network Operating System of SDN, are critical to success of SDNs. Many open source controllers are available for use. In this paper, performance of four popular Openflow based controllers has been evaluated on various metrics. Latency, Bandwidth utilization, Packet Transmission rate, Jitter and Packet loss has been calculated for TCP and UDP traffic on varying network sizes, topologies and Controllers. Floodlight is one of the best performing as compared to reference controller.KeywordsSoftware Defined NetworksMininetFloodlightPOXOpen daylightBandwidth utilizationLatency"
1310,1310,Performance Analysis of Impact of Network Topologies on Different Controllers in SDN,International Conference on Innovative Computing and Communications,,,,10.1007/978-981-15-5148-2_63,Dharmender KumarManu Sood,2021,http://link.springer.com/chapter/10.1007/978-981-15-5148-2_63,Chapter,"Over the passage of a decade, technology, especially in computer science, goes beyond the thinking level of man. The traditional approach of networking has several loopholes that have been minimized to some extent with a modern networking approach known as Software-Defined Networks (SDNs). Software-Defined Network (SDNs) has made the communication more interesting with several notable features such as flexibility, dynamic and agile behavior. These features have become possible with its unique features such as centralized control, direct programmability, and physical separation of two planes named network control plane and forwarding plane or data plane. Since the whole network and its entities are controlled by the control plane, this feature of controlling and separating the two planes has made Software-Defined Networks (SDNs) completely different from traditional networking. By networking we mean that there must exist communication among various physical and logical devices. So Communication plays an important role in any network and is also a vital part of any network. In order to have better communication in SDN, it is essential to have analysis and evaluation of the performance of different network topologies. So finding the number of network topologies, and also finding the best topology among them, which can be proposed best for communications in SDN, would be interesting. In this paper, we propose to find out the best topology among four possible topologies in SDN, on three different SDN controllers through simulation in Mininet. This selection of best topology is done by analysis and evaluation of different network parameters such as throughput, round Trip Time, end-to-end delay, bandwidth, and packet loss with/without link down. Based on the result obtained with different parameters, we propose the best topology that provides us the results for both best-case as well as worst-case communication in our experiment. Four different types of topologies on three different SDN controllers (OpenDaylight, POX, NOX.) have been shown to be simulated through Mininet and Wireshark for SDN.KeywordsSoftware-defined networkOpenFlowMininetWiresharkControl planeThroughputRound trip timeOpenDaylightPOXNOX"
1316,1316,CROCUS: An Objective Approach for SDN Controllers Security Assessment,Security and Privacy in Communication Networks,,,,10.1007/978-3-030-90019-9_22,Carlos SilvaBruno SousaJo√£o P. Vilela,2021,http://link.springer.com/chapter/10.1007/978-3-030-90019-9_22,Chapter,"Software Defined Networking (SDN) facilitates the orchestration and configuration of network resources in a flexible and scalable form, where policies are managed by controller components that interact with network elements through multiple interfaces. The ubiquitous adoption of SDN leads to the availability of multiple SDN controllers, which have different characteristics in terms of performance and security support. SDN controllers are a common target in network attacks since their compromise leads to the capability of impairing the entire network. Thus, the choice of a SDN controller must be a meticulous process from early phases (design to production). CROCUS, herein proposed, provides a mechanism to enable an objective assessment of the security support of SDN controllers. CROCUS relies on the information provided by the Common Vulnerability Scoring System (CVSS) and considers security features derived from scenarios with stringent security requirements. Considering a vehicular communication scenario supported by multiple technologies, we narrow the selection of SDN controllers to OpenDayLight and ONOS choices. The results put in evidence that both controllers have security features relevant for demanding scenarios with ONOS excelling in some aspects
.KeywordsSDNSecurityONOSOpenDayLightDoSMADM"
1968,1968,Performance Evaluation of Various Open Flow SDN Controllers by Addressing Scalability Metric Based on Multifarious Topology Design on Software-defined Networks: A Comprehensive Survey,"Proceedings of Third International Conference on Intelligent Computing, Information and Control Systems",,,,10.1007/978-981-16-7330-6_25,Sachin H. DarekarM. Z. ShaikhHarshal B. Kondke,2022,http://link.springer.com/chapter/10.1007/978-981-16-7330-6_25,Chapter,"The Internet has reached a breaking point, enabling ubiquitous accessibility to all digital demands. Though people have accelerated their use of overall digital demands due to the convenience of the Internet, where nearly everything is connected and accessible, it is becoming increasingly difficult to manage and modify networks. It is always a challenge to meet the emerging needs of network industry. SDN framework was proposed to overcome traditional network architecture (TNA) restrictions in order to cope with contemporary network management in terms of flexibility, agility, responding to faults, and dynamic changes. SDN assists network operators by uncoupling the control plane from its underlying ternary content-addressable memory (TCAM) hardware often called as forwarding plane by allowing the networks to programme as per the anticipated network functionality. Now, switching from traditional to software-defined networking styles, it is worth to check the robustness of the open flow (south bound interface)-based controller platform and the capability of its fault tolerance attribute to approach the successful SDN implementation. The performance of SDN open flow controllers plays a vital role in SDN implementation, which is meant for the separation between control and data plane to leverage the life of network industry. This paper comprehensively surveys the contrast between traditional network architecture (TNA) and software-defined network architecture. This research work discusses about the best feasible SDN implementation, as well as the selection of a useful controller platform for overcoming traditional network constraints and the performance assessment criteria for SDN open flow controllers. Further, the survey is continued with possible literature or work done by various researchers on performance analysis and evaluation of open flow-based SDN controllers as well as in a group of two or more controllers with respect to multifarious network condition, network criteria/parameter/metric, scaling of network load resources with most important varying network topology design. Ultimately, it strives to point ongoing research omission with respect to controller‚Äôs performance bottleneck benchmark suggesting optimized solution when it is well experimented.KeywordsTraditional network architecture (TNA)Software-defined networking (SDN)SDN open flow controllersOpen flow protocolPerformance evaluation/analysis"
1981,1981,Performance Comparison of Various Controllers in Different SDN Topologies,Expert Clouds and Applications,,,,10.1007/978-981-16-2126-0_26,B. KeerthanaMamatha BalachandraHarishchandra HebbarBalachandra Muniyal,2022,http://link.springer.com/chapter/10.1007/978-981-16-2126-0_26,Chapter,"The continuous surge in the number of devices connected to the Internet and the added lineup of Internet of things (IoT) devices to these networks have led to the complexity of connected devices. One of the ways to overcome this issue is by the introduction of software-defined network (SDN), and the management of these networks is done by the use of various controllers. Addition of a controller improves the management of flow control and also adds intelligence to a network. The performance of three such popular controllers; the Ovs, PoX, and Ryu are used in this study. This work is carried out in an SDN environment with varying topologies and packet transmission. Network performance is considered as an important factor in communication. The main aim of the study is to check any change in the round-trip time with respect to the controller and find whether there is any relationship between the number of nodes in the network and round-trip time. This work is designed based on the utilization of mininet in various network topologies. The other aim of the study was to interpret the change in the round-trip time with respect to the varying topologies. The correlation between the performance of the network and the controller type is also analyzed in this study.KeywordsIoTOvsPoXRyuSDNNetwork performanceRound-trip time"
2338,2338,Performance Evaluation of SDN Controllers,Inventive Communication and Computational Technologies,,,,10.1007/978-981-99-5166-6_68,Deepjyot Kaur RyaitManmohan Sharma,2023,http://link.springer.com/chapter/10.1007/978-981-99-5166-6_68,Chapter,"SDN is one of the most promising technologies of networking. It provides an agile paradigm of networking by segregating the control plane from the data plane. SDN aids to reduce the complexity of network management via programmability that creates an environment of network with efficiency, scalability, adaptability, flexibility, reliability, etc. Through programming, the configuration of network elements is done automatically and eliminates manual configuration. Moreover, it provides the user with a holistic view of the network to know about the risk of failure in the network. It is possible due to a controller that offers a logically centralized view of the entire network. The proposed model integrates queuing technique in SDN to improve the quality of service in a network in terms of round-trip time (RTT), average throughput, average bandwidth, ping delay, etc. Moreover, with the lessened value of round-trip time, the reliability of a network is increased, and the latency of the network is decreased. The motive of this paper is to compare the performance of various role SDN controllers with a proposed model in terms of these parameters. During simulation to analyze, the proposed scheme shows more appropriate result as compared to other configuration of SDN controllers.KeywordsSDNQueue techniqueMultiple controllersRTTEvaluation parameters"
4005,4005,Performance Analysis of SDN/OpenFlow Controllers: POX Versus Floodlight,Wireless Personal Communications,,98.0,2,10.1007/s11277-017-4939-z,Idris Z. BholebawaUpena D. Dalal,2018,http://link.springer.com/article/10.1007/s11277-017-4939-z,Article,"Software-Defined Networking (SDN) is an emerging network architecture that is adaptable, dynamic, cost-effective, and manageable. The SDN architecture is a form of network virtualization where the network controlling functions and forwarding functions are decoupled. A setup and configuration task of a control plane to work as an SDN controller is explained in this paper. This paper includes a brief survey of different SDN based OpenFlow-enabled controllers available in various programmable languages. This paper mainly focuses on two OpenFlow-enabled controllers, namely, POX‚Äîa Python-based controller and Floodlight‚Äîa Java-based controller. A performance comparison of both controllers is tested over different network topologies by analyzing network throughput and round-trip delay using an efficient network simulator called Mininet. A single, linear, tree and custom (user-defined) topologies are designed in Mininet by enabling external controllers. It is obtained that, a percentage improvement in round-trip time for Floodlight over POX is 11.5, 13.9, 19.6 and 14.4% for single, linear, tree and custom topology respectively. Similarly, a percentage improvement in throughput for Floodlight over POX is 5.4, 8.9, 3.8 and 4.9% for single, linear, tree and custom topology respectively."
4623,4623,Node to Node Performance Evaluation through RYU SDN Controller,Wireless Personal Communications,,112.0,1,10.1007/s11277-020-07060-4,Md. Tariqul IslamNazrul IslamMd. Al Refat,2020,http://link.springer.com/article/10.1007/s11277-020-07060-4,Article,"Over the last few years, networks became more innovative for constructing and managing with the support of Software Defined Networking (SDN). The inflexibility of typical network architecture gives a great challenge to researchers. SDN is replacing current inflexible and complex networks with an innovative way where the control plane is decoupled from the data plane and fixing some limitations, including manual configuration, debugging, security, scalability, and mobility. Therefore, SDN controllers (e.g., NOX, POX, ONOS, OpenDaylight, Floodlight, Beacon, RYU, etc.) have emerged as a brain to manage such networks. SDN controller‚Äôs performance study provides an excellent impact on enhancing the flexibilities and capabilities of an underlying SDN infrastructure network. This paper contextualizes the performance test analysis on the SDN controller is carried out through criterion (e.g., Throughput, Round-Trip Time, etc.). To implement an SDN architecture, this work uses a Mininet emulator containing a controller RYU with switching hub component, one OpenFlow switch, and three nodes. The aim is to evaluate the performance parameters such as Bandwidth, Throughput, Round-Trip Time, Jitter, and Packet loss between nodes using the RYU controller."
5847,5847,Performance evaluation of Software-Defined Network (SDN) controllers using Dijkstra‚Äôs algorithm,Wireless Networks,,28.0,8,10.1007/s11276-022-03044-3,Yinjun ZhangMengji Chen,2022,http://link.springer.com/article/10.1007/s11276-022-03044-3,Article,"The advancement of technology, specifically the development of information technology (IT) has had a great influence on everyone life. Due to the rapid development of technology, the traditional network architectures are no longer adequate for the nowadays communication, education, businesses, carriers, and end-users, etc. This indeed is a serious issue, as every organization, enterprise, and educational institute, etc. wants to keep itself on top and to facilitate their customers as much as possible by providing high quality services with minimum delay, etc. In order to tackle this problem, a new emerging network architecture known as software defined networking (SDN) may be employed, as it is more interactive, more flexible, controllable, scalable, and programmable. A network system has two main planes known as control and data planes. The SDN architecture/design separates the control and data planes, legalizes network information and state, and keeps the network infrastructure out of the applications. In contrast, a network may reach a point where the computer or network resources restrict the data flow governed by the bandwidth. In SDN architecture, the controller is the most significant and central component, and large SDN networks might have numerous controllers or controller domains that share network administration. Due to the obvious importance of controllers, different studies have been conducted to compare, test, and assess their performance. This study examines the implementation of Dijkstra‚Äôs algorithm using two of the most important SDN open-source controllers (POX and RYU), which permits packet acquisition and transmission between end devices via the network‚Äôs shortest and/or lowest load pathways. Performance of the two utilized controllers is measured in terms of various quality of service (QoS) metrics such as throughput, packet delivery ratio, jitter, and packet loss on a specific network architecture under a variety of workloads. Further, we developed a customized network topology using the Mininet which is an emulator tool for SDN. In addition, we also measured the performance of the utilized controllers in terms of various QoS metrics, using the Mininet tool. The experimental results show that the proposed system attained promising results in terms of all QoS metrics."
6563,6563,Performance Evaluation Using RYU SDN Controller in Software-Defined Networking Environment,Wireless Personal Communications,,122.0,1,10.1007/s11277-021-08920-3,Shanu BhardwajS. N. Panda,2022,http://link.springer.com/article/10.1007/s11277-021-08920-3,Article,"Software-defined networking (SDN) is a new approach that overcomes the obstacles which are faced by conventional networking architecture. The core idea of SDN is to separate the control plane from the data plane. This idea improves the network in many ways, such as efficient utilization of resources, better management of the network, reduced cost, innovation with new evolution, and many others. To manage all these changes, there is a great need for an efficient controller to improve the utilization of resources for the better performance of the network. The controller is also responsible for the analysis and monitoring of real-time data traffic. There is a great need for a high-performance controller in networking industries, data centres, academia, and research due to the tremendous growth of distributed processing-based real time applications. Therefore, it is crucial to investigate the performance of an open-source controller to provide efficient traffic routing, leading to improved utilization of resources for the enhanced performance metrics of the network. The paper presents an implementation of SDN architecture using an open-source RYU SDN controller for the network traffic analysis. The proposed work evaluates the performance of SDN architecture based custom network topology for a node to node performance parameters such as bandwidth, throughput and roundtrip time, etc. The simulation results exhibit an improved performance of the proposed work in comparison to the existing default network topology for SDN."
7917,7917,"Security Analysis of FloodLight, ZeroSDN, Beacon and POX SDN Controllers",SDN and NFV Security,,,,10.1007/978-3-319-71761-6_6,Qamar IlyasRahamatullah Khondoker,2018,http://link.springer.com/chapter/10.1007/978-3-319-71761-6_6,Chapter,"Software-defined network (SDN) is an emerging approach to replace legacy network‚Äôs (coupled software and hardware) control and management by decoupling the control plane (software) from the data plane (hardware). SDN provides flexibility to the developers by making the central control plane directly programmable. Some new challenges, such as single point of failure, might be encountered due to the central control plane. SDN focused on flexibility where as the security of the network was primarily not considered. Decoupling of control plane (software) from data plane (hardware) is a great step for innovation and research. Centralized control plane may cause the single point of failure and compromising the controller means the whole network is compromised. Many organizations and data centers are moving towards SDN. Now, security is their primary concern. Security issues of the four controllers including FloodLight, ZeroSDN, Beacon and POX are analyzed with STRIDE threat modeling technique. We found that SE-FloodLight is the most secure controller because it is the most resilient controller as compared to the other controllers.KeywordsSoftware Defined Networking (SDN)South Bound API (SBI)North Bound API (NBI)STRIDEPublish/Subscribe (pub/sub)"
